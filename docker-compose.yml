version: "3.8"


services: 



    # =========================== Flask 
    flask:
        build: 
            dockerfile: ./Dockerfile.flask
            context: ./

        image: kuiper_flask
        container_name: kuiper_flask
        #restart: always

        ports:
            - "5000:5000"
        volumes:
            - type: volume
              source: kuiper_nfs
              target: /app/
              volume:
                nocopy: true
            - type: bind
              source: ./system_health/
              target: /system_health/
              volume:
                nocopy: true

        #depends_on:
            #- "mongodb"
            #- "es01"
            #- "redis"
            #- "celery"
            #- "nfs"

        
        networks:
            kuiper:
                ipv4_address: 172.30.250.12

        env_file:
            - ./env_var.env

        environment:
            REDIS_IP: redis
            MONGODB_IP: mongodb
            ES_IP: es01

        cap_add:
            - sys_admin
        devices:
            - /dev/fuse
        security_opt:
            - apparmor:unconfined

    # =========================== mongodb
    mongodb:
        
        build: 
            dockerfile: ./Dockerfile.mongodb
            context: ./
        container_name: kuiper_mongodb
        restart: always
        
        ports:
            - 27017:27017
        
        environment:
            ME_CONFIG_MONGODB_URL: mongodb://root:example@mongo:27017/
            FLASK_IP: flask

        env_file:
            - ./env_var.env
        volumes:
            - ./mongodb/db/:/data/db
            #- ./system_health/:/system_health/

        
        networks:
            kuiper:
                ipv4_address: 172.30.250.13
    
    # =========================== Elasticsearch
    es01:
        #image: docker.elastic.co/elasticsearch/elasticsearch:7.8.1

        build: 
            dockerfile: ./Dockerfile.es
            context: ./
        container_name: kuiper_es01
        environment:
          - node.name=es01
          - cluster.name=es-docker-cluster
          - discovery.seed_hosts=es01
          - cluster.initial_master_nodes=es01
          - "ES_JAVA_OPTS=-Xms512m -Xmx512m"
          - FLASK_IP=flask
          - ES_IP=es01

        volumes:
          - ./elasticsearch:/usr/share/elasticsearch/data
          #- ./system_health/:/system_health/
        ports:
          - 9200:9200
          
         ulimits:
            nofile:
                soft: "65536"
                hard: "65536"


        env_file:
            - ./env_var.env
        networks:
            kuiper:
                ipv4_address: 172.30.250.14



    # =========================== Nginx
    nginx: 

        build: 
            dockerfile: ./Dockerfile
            context: ./nginx/

        image: kuiper_nginx
        container_name: kuiper_nginx
    
        ports:
            - "443:443"
    
        volumes:
            - ./nginx/templates/kuiper-nginx.conf:/etc/nginx/templates/default.conf.template
            - ./nginx/:/nginx/
            #- ./system_health/:/system_health/

        
        depends_on:
            - flask
            
        env_file:
            - ./env_var.env

        environment:
            FLASK_IP: flask
        
    
        networks:
            kuiper:
                ipv4_address: 172.30.250.15

    # =========================== Celery
    celery:
        build: 
            dockerfile: ./Dockerfile.celery
            context: ./
        container_name: kuiper_celery
        restart: always

        depends_on:
            - "redis"
            - "mongodb"
            - "es01"
            - "nfs"

        volumes:
            - type: volume
              source: kuiper_nfs
              target: /app/
              volume:
                nocopy: true
            #- type: bind
            #  source: ./system_health/
            #  target: /system_health/
            #  volume:
            #    nocopy: true
              
        environment:
            REDIS_IP: redis
            MONGODB_IP: mongodb
            ES_IP: es01
            FLASK_IP: flask

            
        env_file:
            - ./env_var.env

        privileged: true
        
        networks:
            kuiper:
                ipv4_address: 172.30.250.16
    # =========================== Redis
    redis:
        build: 
            dockerfile: ./Dockerfile.redis
            context: ./
        container_name: kuiper_redis
        ports:
            - '6379:6379'
        volumes:
            - "./redis:/data"
            #- ./system_health/:/system_health/

        
        env_file:
            - ./env_var.env
        
        environment:
            FLASK_IP: flask

        networks:
            kuiper:
                ipv4_address: 172.30.250.11
    # =========================== NFS Server
    nfs:
        image: itsthenetwork/nfs-server-alpine:12

        container_name: kuiper_nfs
        restart: unless-stopped
        privileged: true
        hostname: nfs.kuiper.local
        domainname: nfs.kuiper.local
        environment:
            SHARED_DIRECTORY: /app

        env_file:
            - ./env_var.env
        
        volumes:
            - ./kuiper/:/app
            #- ./system_health/:/system_health/
        ports:
            - 2049:2049


        networks:
            kuiper:
                ipv4_address: 172.30.250.10
        
volumes:
    kuiper_nfs:
        driver_opts:
            type: nfs4
            o: "addr=172.30.250.10"         # this should match the nfs ip address
            device: ":/"
        
networks:
    kuiper:
        driver: bridge
        ipam:
            config: 
                - subnet: 172.30.250.0/24
